{"name":"Dotfiles","tagline":"A gnarly system manager and portable dotfiles generator!","body":"# Dotfiles\r\n\r\nThis project is my gnarly system manager and dotfile auto-configuration tool since\r\n[dotfiles are meant to be forked!](http://zachholman.com/2010/08/dotfiles-are-meant-to-be-forked/)\r\n\r\n[Dotfiles](https://dotfiles.github.io/) are funky hidden configuration files which\r\npeople use to customize their nerdery (and greatly enhance productivity): change how their prompt looks,\r\nset up their $PATH, completely change everything about Vim,  adjust settings their settings\r\nand do about a billion and a half other things. They're tons of fun, and I use them to get things\r\ndone [at the speed of thought](http://mrandrewandrade.com/speed-of-thought/).\r\n\r\nThis repo contains the files to get you started!   \r\n\r\n**Note**: This setup was orignally taken from [here](github.com/michaeljsmalley/dotfiles)\r\nand built on Linux Mint based on my own preferences.  The system should work for most\r\n*nix-based (Unix-like) systems (such at Mac and Ubuntu).  If you are\r\nusing Mac, I highly suggest upgrading your terminal and using [iTerm2](https://www.iterm2.com/).    \r\n\r\nTo get started you either follow the command line installation instructions below\r\n(by opening terminal and typing the commands) or you can\r\n[download the files](https://github.com/mrandrewandrade/dotfiles/zipball/master)\r\nand unzip them in your home directory so that the path is `~/dotfiles/`.\r\n\r\nYou can then run makesymlinks.sh (by running `sudo bash makesymlinks.sh`) to install\r\neverything.  Note, if you read the script, it creates\r\n[symlinks](https://en.wikipedia.org/wiki/Symbolic_link) from your home directory\r\nto the files which are located in `~/dotfiles/`.  The setup script is smart enough to\r\nback up your existing dotfiles into a `~/dotfiles_old/` directory if you already have\r\nany dotfiles of the same name as the dotfile symlinks being created in your home directory.     \r\n\r\nI also prefer `zsh` as my shell of choice.  As such, the setup script will also\r\nclone the `oh-my-zsh` repository from my GitHub. It then checks to see if `zsh`\r\nis installed.  If `zsh` is installed, and it is not already configured as the\r\ndefault shell, the setup script will execute a `chsh -s $(which zsh)`.  This\r\nchanges the default shell to zsh, and takes effect as soon as a new zsh is\r\nspawned or on next login.\r\n\r\nSo, to recap, the install script will:\r\n\r\n1. Back up any existing dotfiles in your home directory to `~/dotfiles_old/`\r\n2. Create symlinks to the dotfiles in `~/dotfiles/` in your home directory\r\n3. Clone the `oh-my-zsh` repository from my GitHub (for use with `zsh`)\r\n4. Check to see if `zsh` is installed, if it isn't, try to install it.\r\n5. If zsh is installed, run a `chsh -s` to set it as the default shell.\r\n\r\nYou can then configure any of your dotfiles by editing the files in \r\n`~/dotfiles`.\r\n\r\n## Installation\r\n\r\n\r\n``` bash\r\ncd ~/\r\n# Note: if you fork the repo, change mrandrewandrade to your github username\r\ngit clone https://github.com/mrandrewandrade/dotfiles.git ~/dotfiles\r\ncd ~/dotfiles\r\n./makesymlinks.sh\r\n```\r\n\r\nCurrent todo list:\r\n- Add install tmux + other of my favourite tools to [makesymlinks.sh](makesymlinks.sh)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}